name: Blog Publisher

on:
  issues:
    types: [closed]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish-blog-post:
    if: contains(github.event.issue.labels.*.name, 'APPROVED')
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'
    - name: Generate blog post
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}
        ISSUE_TITLE: ${{ github.event.issue.title }}
        ISSUE_BODY: ${{ github.event.issue.body }}
        ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
        ISSUE_CREATED_AT: ${{ github.event.issue.created_at }}
        ISSUE_UPDATED_AT: ${{ github.event.issue.updated_at }}
      run: node scripts/generate-blog-post.js
    
    - name: Build site
      run: |
        # Ensure docs directory exists
        mkdir -p docs
        # Copy any additional assets if needed
        if [ -d "assets" ]; then
          cp -r assets docs/
        fi
    - name: Commit generated files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Add blog post: ${{ github.event.issue.title }}"
          git push
        fi